[{"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\index.js":"1","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\App.js":"2","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\reportWebVitals.js":"3","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\List\\index.js":"4","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\AddList\\index.js":"5","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Badge\\index.js":"6","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Tasks\\index.js":"7","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Tasks\\AddTasksForm.js":"8"},{"size":313,"mtime":1608562697393,"results":"9","hashOfConfig":"10"},{"size":6414,"mtime":1608817296729,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1566,"mtime":1608567909320,"results":"13","hashOfConfig":"10"},{"size":3123,"mtime":1608642784536,"results":"14","hashOfConfig":"10"},{"size":254,"mtime":1608470533267,"results":"15","hashOfConfig":"10"},{"size":2969,"mtime":1608645473190,"results":"16","hashOfConfig":"10"},{"size":1998,"mtime":1608645747919,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"65d5x3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\index.js",[],["38","39"],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\App.js",[],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\reportWebVitals.js",[],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\List\\index.js",[],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\AddList\\index.js",[],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Badge\\index.js",["40"],"import React from 'react'\r\nimport './index.css'\r\n\r\nexport default function Badge({ icon, color, onClick }) {\r\n    \r\n    return (\r\n        <i onClick={onClick}>\r\n            {icon ? <img src={icon} /> : <i className={color}></i>}\r\n        </i>\r\n    )\r\n}\r\n",["41","42"],"C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Tasks\\index.js",["43","44","45"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport AddTasksForm from './AddTasksForm'\r\n\r\nimport checkIcon from '../../assets/img/check.svg'\r\nimport editIcon from '../../assets/img/edit.svg'\r\nimport removeIcon from '../../assets/img/remove.svg'\r\n\r\n\r\nimport './index.css'\r\n\r\nexport default function Tasks({ list, onEditTitle, onAddTask, withoutEmpty, onRemoveTask, onEditTask , onCompleteTask}) {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название списка', list.name)\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios\r\n                .patch('http://localhost:3001/lists/' + list.id, {\r\n                    name: newTitle\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                    alert('Не удалось изменить название списка')\r\n                });\r\n        }\r\n    }\r\n\r\n    const onChangeCkeckbox = e => {\r\n        const str = e.target.id.replace('task-','')\r\n        \r\n        onCompleteTask(list.id, Number(str),e.target.checked)\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n\r\n            <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n                {list.name}\r\n                <img onClick={editTitle} className=\"edit-icon\" src={editIcon} alt=\"Edit icon\" />\r\n            </h2>\r\n\r\n            <div>\r\n                {!withoutEmpty && list.tasks && !list.tasks.length && (\r\n                    <h2 className=\"noTasks\">Задачи отсутствуют</h2>)}\r\n                {\r\n                    \r\n                        list.tasks &&\r\n                            list.tasks.map(task =>\r\n\r\n                                <div key={task.id} className=\"tasks__items\">\r\n                                    <div className=\"checkbox\">\r\n                                        <input onChange={onChangeCkeckbox} id={`task-${task.id}`} type=\"checkbox\" checked = {task.completed} />\r\n                                        <label htmlFor={`task-${task.id}`}><img src={checkIcon}></img></label>\r\n                                    </div>\r\n                                    <p>{task.text}</p>\r\n                                    <div className=\"tasks__items-row-actions\">\r\n                                        <div onClick={() => onEditTask(list.id, task)}>\r\n                                            <img src={editIcon}></img>\r\n                                        </div>\r\n                                        <div onClick={() => onRemoveTask(list.id, task.id)}>\r\n                                            <img src={removeIcon}></img>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>)\r\n                    \r\n\r\n                }\r\n\r\n                <AddTasksForm key={list.id} list={list} onAddTask={onAddTask} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\nik29\\Desktop\\Практика\\todo\\src\\components\\Tasks\\AddTasksForm.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":8,"column":21,"nodeType":"52","endLine":8,"endColumn":39},{"ruleId":"46","replacedBy":"53"},{"ruleId":"48","replacedBy":"54"},{"ruleId":"50","severity":1,"message":"51","line":55,"column":76,"nodeType":"52","endLine":55,"endColumn":97},{"ruleId":"50","severity":1,"message":"51","line":60,"column":45,"nodeType":"52","endLine":60,"endColumn":65},{"ruleId":"50","severity":1,"message":"51","line":63,"column":45,"nodeType":"52","endLine":63,"endColumn":67},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["55"],["56"],"no-global-assign","no-unsafe-negation"]